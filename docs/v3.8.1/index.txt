2:I[9698,["346","static/chunks/346-c06e7efa10f5ccdb.js","227","static/chunks/app/docs/%5Bversion%5D/page-d3276c5a89e7029a.js"],"SideBar"]
3:I[7065,["346","static/chunks/346-c06e7efa10f5ccdb.js","227","static/chunks/app/docs/%5Bversion%5D/page-d3276c5a89e7029a.js"],"DocSearch"]
4:I[4303,["346","static/chunks/346-c06e7efa10f5ccdb.js","227","static/chunks/app/docs/%5Bversion%5D/page-d3276c5a89e7029a.js"],"MarkdownContent"]
6:I[1844,["346","static/chunks/346-c06e7efa10f5ccdb.js","227","static/chunks/app/docs/%5Bversion%5D/page-d3276c5a89e7029a.js"],""]
7:I[4063,["346","static/chunks/346-c06e7efa10f5ccdb.js","397","static/chunks/397-6dd2ff192d8a9ea9.js","15","static/chunks/15-ddea9c0dc1b2ecf5.js","356","static/chunks/app/docs/%5Bversion%5D/layout-3225f3df119af2cc.js"],"ImmutableConsole"]
8:I[914,["346","static/chunks/346-c06e7efa10f5ccdb.js","397","static/chunks/397-6dd2ff192d8a9ea9.js","15","static/chunks/15-ddea9c0dc1b2ecf5.js","356","static/chunks/app/docs/%5Bversion%5D/layout-3225f3df119af2cc.js"],"HeaderLogoLink"]
9:I[914,["346","static/chunks/346-c06e7efa10f5ccdb.js","397","static/chunks/397-6dd2ff192d8a9ea9.js","15","static/chunks/15-ddea9c0dc1b2ecf5.js","356","static/chunks/app/docs/%5Bversion%5D/layout-3225f3df119af2cc.js"],"HeaderLinks"]
a:I[103,[],""]
c:I[5885,[],""]
5:T5f5,<p>While designed to bring these powerful functional concepts to JavaScript, it
presents an Object-Oriented API familiar to Javascript engineers and closely
mirroring that of Array, Map, and Set. It is easy and efficient to convert to
and from plain Javascript types.</p>
<p>Note: all examples are presented in <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/New_in_JavaScript/ECMAScript_6_support_in_Mozilla">ES6</a>. To run in all browsers, they
need to be translated to ES3. For example:</p>
<code class="codeBlock"><span class="token comment">// ES6</span>
foo<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=></span> x <span class="token operator">*</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// ES3</span>
foo<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token block-keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> x <span class="token operator">*</span> x<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code>b:["version","v3.8.1","d"]
0:["XT7YSMMLdh0TOF8yI1quU",[[["",{"children":["docs",{"children":[["version","v3.8.1","d"],{"children":["__PAGE__?{\"version\":\"v3.8.1\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["docs",{"children":[["version","v3.8.1","d"],{"children":["__PAGE__",{},["$L1",[["$","$L2",null,{"links":[{"label":"fromJS()","url":"/docs/v3.8.1/fromJS()"},{"label":"is()","url":"/docs/v3.8.1/is()"},{"label":"List","url":"/docs/v3.8.1/List"},{"label":"Map","url":"/docs/v3.8.1/Map"},{"label":"OrderedMap","url":"/docs/v3.8.1/OrderedMap"},{"label":"Set","url":"/docs/v3.8.1/Set"},{"label":"OrderedSet","url":"/docs/v3.8.1/OrderedSet"},{"label":"Stack","url":"/docs/v3.8.1/Stack"},{"label":"Range()","url":"/docs/v3.8.1/Range()"},{"label":"Repeat()","url":"/docs/v3.8.1/Repeat()"},{"label":"Record()","url":"/docs/v3.8.1/Record()"},{"label":"Record.Class","url":"/docs/v3.8.1/Record.Class"},{"label":"Seq","url":"/docs/v3.8.1/Seq"},{"label":"Seq.Keyed","url":"/docs/v3.8.1/Seq.Keyed"},{"label":"Seq.Indexed","url":"/docs/v3.8.1/Seq.Indexed"},{"label":"Seq.Set","url":"/docs/v3.8.1/Seq.Set"},{"label":"Iterable","url":"/docs/v3.8.1/Iterable"},{"label":"Iterable.Keyed","url":"/docs/v3.8.1/Iterable.Keyed"},{"label":"Iterable.Indexed","url":"/docs/v3.8.1/Iterable.Indexed"},{"label":"Iterable.Set","url":"/docs/v3.8.1/Iterable.Set"},{"label":"Collection","url":"/docs/v3.8.1/Collection"},{"label":"Collection.Keyed","url":"/docs/v3.8.1/Collection.Keyed"},{"label":"Collection.Indexed","url":"/docs/v3.8.1/Collection.Indexed"},{"label":"Collection.Set","url":"/docs/v3.8.1/Collection.Set"}]}],["$","div","Overview",{"className":"docContents","children":[["$","$L3",null,{}],["$","h1",null,{"children":["Immutable.js (","v3.8.1",")"]}],["$","div",null,{"children":[["$","section",null,{"children":[["$","$L4",null,{"contents":"<p>Immutable data encourages pure functions (data-in, data-out) and lends itself\nto much simpler application development and enabling techniques from\nfunctional programming such as lazy evaluation.</p>\n"}],["$","$L4",null,{"contents":"$5"}]]}],["$","h4",null,{"className":"groupTitle","children":"API"}],[["$","section","/docs/v3.8.1/fromJS()",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L6",null,{"href":"/docs/v3.8.1/fromJS()","children":"fromJS()"}]}],["$","$L4",null,{"className":"detail","contents":"<p>Deeply converts plain JS objects and arrays to Immutable Maps and Lists.</p>\n"}]]}],["$","section","/docs/v3.8.1/is()",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L6",null,{"href":"/docs/v3.8.1/is()","children":"is()"}]}],["$","$L4",null,{"className":"detail","contents":"<p>Value equality check with semantics similar to <code><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\" target=\"_blank\" rel=\"noopener\">Object.is</a></code>, but treats\nImmutable <code><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol\" target=\"_blank\" rel=\"noopener\">Iterable</a></code>s as values, equal if the second <code><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol\" target=\"_blank\" rel=\"noopener\">Iterable</a></code> includes\nequivalent values.</p>\n"}]]}],["$","section","/docs/v3.8.1/List",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L6",null,{"href":"/docs/v3.8.1/List","children":"List"}]}],["$","$L4",null,{"className":"detail","contents":"<p>Lists are ordered indexed dense collections, much like a JavaScript\nArray.</p>\n"}]]}],["$","section","/docs/v3.8.1/Map",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L6",null,{"href":"/docs/v3.8.1/Map","children":"Map"}]}],["$","$L4",null,{"className":"detail","contents":"<p>Immutable Map is an unordered Iterable.Keyed of (key, value) pairs with\n<code><span class=\"token constant\">O</span><span class=\"token punctuation\">(</span>log32 <span class=\"token constant\">N</span><span class=\"token punctuation\">)</span></code> gets and <code><span class=\"token constant\">O</span><span class=\"token punctuation\">(</span>log32 <span class=\"token constant\">N</span><span class=\"token punctuation\">)</span></code> persistent sets.</p>\n"}]]}],["$","section","/docs/v3.8.1/OrderedMap",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L6",null,{"href":"/docs/v3.8.1/OrderedMap","children":"OrderedMap"}]}],["$","$L4",null,{"className":"detail","contents":"<p>A type of Map that has the additional guarantee that the iteration order of\nentries will be the order in which they were set().</p>\n"}]]}],["$","section","/docs/v3.8.1/Set",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L6",null,{"href":"/docs/v3.8.1/Set","children":"Set"}]}],["$","$L4",null,{"className":"detail","contents":"<p>A Collection of unique values with <code><span class=\"token constant\">O</span><span class=\"token punctuation\">(</span>log32 <span class=\"token constant\">N</span><span class=\"token punctuation\">)</span></code> adds and has.</p>\n"}]]}],["$","section","/docs/v3.8.1/OrderedSet",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L6",null,{"href":"/docs/v3.8.1/OrderedSet","children":"OrderedSet"}]}],["$","$L4",null,{"className":"detail","contents":"<p>A type of Set that has the additional guarantee that the iteration order of\nvalues will be the order in which they were <code><a href=\"/docs/v3.8.1/OrderedSet#add()\">add</a></code>ed.</p>\n"}]]}],["$","section","/docs/v3.8.1/Stack",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L6",null,{"href":"/docs/v3.8.1/Stack","children":"Stack"}]}],["$","$L4",null,{"className":"detail","contents":"<p>Stacks are indexed collections which support very efficient O(1) addition\nand removal from the front using <code><a href=\"/docs/v3.8.1/Stack#unshift()\">unshift(v)</a></code> and <code><a href=\"/docs/v3.8.1/Stack#shift()\">shift()</a></code>.</p>\n"}]]}],["$","section","/docs/v3.8.1/Range()",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L6",null,{"href":"/docs/v3.8.1/Range()","children":"Range()"}]}],["$","$L4",null,{"className":"detail","contents":"<p>Returns a Seq.Indexed of numbers from <code><span class=\"t param\">start</span></code> (inclusive) to <code><span class=\"t param\">end</span></code>\n(exclusive), by <code><span class=\"t param\">step</span></code>, where <code><span class=\"t param\">start</span></code> defaults to 0, <code><span class=\"t param\">step</span></code> to 1, and <code><span class=\"t param\">end</span></code> to\ninfinity. When <code><span class=\"t param\">start</span></code> is equal to <code><span class=\"t param\">end</span></code>, returns empty range.</p>\n"}]]}],["$","section","/docs/v3.8.1/Repeat()",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L6",null,{"href":"/docs/v3.8.1/Repeat()","children":"Repeat()"}]}],["$","$L4",null,{"className":"detail","contents":"<p>Returns a Seq.Indexed of <code><span class=\"t param\">value</span></code> repeated <code><span class=\"t param\">times</span></code> times. When <code><span class=\"t param\">times</span></code> is\nnot defined, returns an infinite <code><a href=\"/docs/v3.8.1/Seq\">Seq</a></code> of <code><span class=\"t param\">value</span></code>.</p>\n"}]]}],["$","section","/docs/v3.8.1/Record()",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L6",null,{"href":"/docs/v3.8.1/Record()","children":"Record()"}]}],["$","$L4",null,{"className":"detail","contents":"<p>Creates a new Class which produces Record instances. A record is similar to\na JS object, but enforce a specific set of allowed string keys, and have\ndefault values.</p>\n"}]]}],["$","section","/docs/v3.8.1/Record.Class",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L6",null,{"href":"/docs/v3.8.1/Record.Class","children":"Record.Class"}]}],"$undefined"]}],["$","section","/docs/v3.8.1/Seq",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L6",null,{"href":"/docs/v3.8.1/Seq","children":"Seq"}]}],["$","$L4",null,{"className":"detail","contents":"<p>Represents a sequence of values, but may not be backed by a concrete data\nstructure.</p>\n"}]]}],["$","section","/docs/v3.8.1/Seq.Keyed",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L6",null,{"href":"/docs/v3.8.1/Seq.Keyed","children":"Seq.Keyed"}]}],["$","$L4",null,{"className":"detail","contents":"<p><code><a href=\"/docs/v3.8.1/Seq\">Seq</a></code> which represents key-value pairs.</p>\n"}]]}],["$","section","/docs/v3.8.1/Seq.Indexed",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L6",null,{"href":"/docs/v3.8.1/Seq.Indexed","children":"Seq.Indexed"}]}],["$","$L4",null,{"className":"detail","contents":"<p><code><a href=\"/docs/v3.8.1/Seq\">Seq</a></code> which represents an ordered indexed list of values.</p>\n"}]]}],["$","section","/docs/v3.8.1/Seq.Set",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L6",null,{"href":"/docs/v3.8.1/Seq.Set","children":"Seq.Set"}]}],["$","$L4",null,{"className":"detail","contents":"<p><code><a href=\"/docs/v3.8.1/Seq\">Seq</a></code> which represents a set of values.</p>\n"}]]}],["$","section","/docs/v3.8.1/Iterable",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L6",null,{"href":"/docs/v3.8.1/Iterable","children":"Iterable"}]}],["$","$L4",null,{"className":"detail","contents":"<p>The <code><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol\" target=\"_blank\" rel=\"noopener\">Iterable</a></code> is a set of (key, value) entries which can be iterated, and\nis the base class for all collections in <code>immutable</code>, allowing them to\nmake use of all the Iterable methods (such as <code><a href=\"/docs/v3.8.1/Iterable#map()\">map</a></code> and <code><a href=\"/docs/v3.8.1/Iterable#filter()\">filter</a></code>).</p>\n"}]]}],["$","section","/docs/v3.8.1/Iterable.Keyed",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L6",null,{"href":"/docs/v3.8.1/Iterable.Keyed","children":"Iterable.Keyed"}]}],["$","$L4",null,{"className":"detail","contents":"<p>Keyed Iterables have discrete keys tied to each value.</p>\n"}]]}],["$","section","/docs/v3.8.1/Iterable.Indexed",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L6",null,{"href":"/docs/v3.8.1/Iterable.Indexed","children":"Iterable.Indexed"}]}],["$","$L4",null,{"className":"detail","contents":"<p>Indexed Iterables have incrementing numeric keys. They exhibit\nslightly different behavior than <code><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#the_iterable_protocol/Keyed\" target=\"_blank\" rel=\"noopener\">Iterable.Keyed</a></code> for some methods in order\nto better mirror the behavior of JavaScript&#39;s <code><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\" target=\"_blank\" rel=\"noopener\">Array</a></code>, and add methods\nwhich do not make sense on non-indexed Iterables such as <code><a href=\"/docs/v3.8.1/Iterable.Indexed#indexOf()\">indexOf</a></code>.</p>\n"}]]}],["$","section","/docs/v3.8.1/Iterable.Set",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L6",null,{"href":"/docs/v3.8.1/Iterable.Set","children":"Iterable.Set"}]}],["$","$L4",null,{"className":"detail","contents":"<p>Set Iterables only represent values. They have no associated keys or\nindices. Duplicate values are possible in Seq.Sets, however the\nconcrete <code><a href=\"/docs/v3.8.1/Set\">Set</a></code> does not allow duplicate values.</p>\n"}]]}],["$","section","/docs/v3.8.1/Collection",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L6",null,{"href":"/docs/v3.8.1/Collection","children":"Collection"}]}],["$","$L4",null,{"className":"detail","contents":"<p>Collection is the abstract base class for concrete data structures. It\ncannot be constructed directly.</p>\n"}]]}],["$","section","/docs/v3.8.1/Collection.Keyed",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L6",null,{"href":"/docs/v3.8.1/Collection.Keyed","children":"Collection.Keyed"}]}],["$","$L4",null,{"className":"detail","contents":"<p><code><a href=\"/docs/v3.8.1/Collection\">Collection</a></code> which represents key-value pairs.</p>\n"}]]}],["$","section","/docs/v3.8.1/Collection.Indexed",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L6",null,{"href":"/docs/v3.8.1/Collection.Indexed","children":"Collection.Indexed"}]}],["$","$L4",null,{"className":"detail","contents":"<p><code><a href=\"/docs/v3.8.1/Collection\">Collection</a></code> which represents ordered indexed values.</p>\n"}]]}],["$","section","/docs/v3.8.1/Collection.Set",{"className":"interfaceMember","children":[["$","h3",null,{"className":"memberLabel","children":["$","$L6",null,{"href":"/docs/v3.8.1/Collection.Set","children":"Collection.Set"}]}],["$","$L4",null,{"className":"detail","contents":"<p><code><a href=\"/docs/v3.8.1/Collection\">Collection</a></code> which represents values, unassociated with keys or indices.</p>\n"}]]}]]]}]]}]],null]]},[null,["$","div",null,{"children":[["$","$L7",null,{"version":"v3.8.1"}],["$","div",null,{"className":"header","children":["$","div",null,{"className":"miniHeader","children":["$","div",null,{"className":"miniHeaderContents","children":[["$","$L8",null,{}],["$","$L9",null,{"versions":["v4.0.0-rc.2","v3.8.1","latest@main"],"currentVersion":"v3.8.1"}]]}]}]}],["$","div",null,{"className":"pageBody","children":["$","div",null,{"className":"contents","children":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","docs","children","$b","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lc",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]}]}]]}],null]]},["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children","docs","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lc",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,["$","html",null,{"lang":"en","children":["$","body",null,{"children":["$","$La",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$Lc",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/f4479af2108893f8.css","precedence":"next","crossOrigin":""}]],"$Ld"]]]]
d:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Documentation v3.8.1 — Immutable.js"}],["$","link","3",{"rel":"icon","href":"/favicon.png"}]]
1:null
