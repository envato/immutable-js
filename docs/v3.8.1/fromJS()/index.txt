2:I[6556,["346","static/chunks/346-c06e7efa10f5ccdb.js","609","static/chunks/app/docs/%5Bversion%5D/%5Btype%5D/page-1c0b3e03993b4b68.js"],"TypeDocumentation"]
4:I[103,[],""]
7:I[5885,[],""]
8:I[4063,["346","static/chunks/346-c06e7efa10f5ccdb.js","397","static/chunks/397-6dd2ff192d8a9ea9.js","15","static/chunks/15-ddea9c0dc1b2ecf5.js","356","static/chunks/app/docs/%5Bversion%5D/layout-3225f3df119af2cc.js"],"ImmutableConsole"]
9:I[914,["346","static/chunks/346-c06e7efa10f5ccdb.js","397","static/chunks/397-6dd2ff192d8a9ea9.js","15","static/chunks/15-ddea9c0dc1b2ecf5.js","356","static/chunks/app/docs/%5Bversion%5D/layout-3225f3df119af2cc.js"],"HeaderLogoLink"]
a:I[914,["346","static/chunks/346-c06e7efa10f5ccdb.js","397","static/chunks/397-6dd2ff192d8a9ea9.js","15","static/chunks/15-ddea9c0dc1b2ecf5.js","356","static/chunks/app/docs/%5Bversion%5D/layout-3225f3df119af2cc.js"],"HeaderLinks"]
3:T19c2,<p>If a <code><span class="t param">reviver</span></code> is optionally provided, it will be called with every
collection as a Seq (beginning with the most nested collections
and proceeding to the top-level collection itself), along with the key
refering to each collection and the parent JS object provided as <code><span class="token var">this</span></code>.
For the top level, object, the key will be <code><span class="token string">""</span></code>. This <code><span class="t param">reviver</span></code> is expected
to return a new Immutable Iterable, allowing for custom conversions from
deep JS objects.</p>
<p>This example converts JSON to List and OrderedMap:</p>
<code class="codeBlock"><span class="token qualifier">Immutable</span><span class="token punctuation">.</span><span class="token function">fromJS</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">b</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token literal-property property">c</span><span class="token operator">:</span> <span class="token number">40</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token block-keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> isIndexed <span class="token operator">=</span> <span class="token qualifier">Immutable</span><span class="token punctuation">.</span><span class="token qualifier">Iterable</span><span class="token punctuation">.</span><span class="token function">isIndexed</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> isIndexed <span class="token operator">?</span> value<span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> value<span class="token punctuation">.</span><span class="token function">toOrderedMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// true, "b", {b: [10, 20, 30]}</span>
<span class="token comment">// false, "a", {a: {b: [10, 20, 30]}, c: 40}</span>
<span class="token comment">// false, "", {"": {a: {b: [10, 20, 30]}, c: 40}}</span></code><p>If <code><span class="t param">reviver</span></code> is not provided, the default behavior will convert Arrays into
Lists and Objects into Maps.</p>
<p><code><span class="t param">reviver</span></code> acts similarly to the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse#Example.3A_Using_the_reviver_parameter" title="Using the reviver parameter">same parameter in <code><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse" target="_blank" rel="noopener">JSON.parse</a></code></a>.</p>
<p><code><a href="/docs/v3.8.1/fromJS()">Immutable.fromJS</a></code> is conservative in its conversion. It will only convert
arrays which pass <code><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray" target="_blank" rel="noopener">Array.isArray</a></code> to Lists, and only raw objects (no custom
prototype) to Map.</p>
<p>Keep in mind, when using JS objects to construct Immutable Maps, that
JavaScript Object properties are always strings, even if written in a
quote-less shorthand, while Immutable Maps accept keys of any type.</p>
<code class="codeBlock"><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token string">"one"</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token qualifier">Object</span><span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [ "1" ]</span>
obj<span class="token punctuation">[</span><span class="token string">"1"</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// "one"</span>
obj<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token comment">// "one"</span>

<span class="token keyword">var</span> map <span class="token operator">=</span> <span class="token function">Map</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// "one"</span>
map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// undefined</span></code><p>Property access for JavaScript Objects first converts the key to a string,
but since Immutable Map keys can be of any type the argument to <code><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code> is
not altered.</p>
5:["version","v3.8.1","d"]
6:["type","fromJS()","d"]
0:["XT7YSMMLdh0TOF8yI1quU",[[["",{"children":["docs",{"children":[["version","v3.8.1","d"],{"children":[["type","fromJS()","d"],{"children":["__PAGE__?{\"version\":\"v3.8.1\",\"type\":\"fromJS()\"}",{}]}]}]}]},"$undefined","$undefined",true],["",{"children":["docs",{"children":[["version","v3.8.1","d"],{"children":[["type","fromJS()","d"],{"children":["__PAGE__",{},["$L1",["$","$L2",null,{"def":{"qualifiedName":"fromJS","call":{"name":"fromJS","label":"fromJS()","id":"fromJS()","doc":{"synopsis":"<p>Deeply converts plain JS objects and arrays to Immutable Maps and Lists.</p>\n","description":"$3","notes":[]},"signatures":[{"line":85,"params":[{"name":"json","type":{"k":1}},{"name":"reviver","type":{"k":10,"params":[{"name":"k","type":{"k":1}},{"name":"v","type":{"k":12,"name":"Iterable","args":[{"k":1},{"k":1}]}}],"type":{"k":1}},"optional":true}],"type":{"k":1}}],"url":"/docs/v3.8.1/fromJS()"},"label":"fromJS()","url":"/docs/v3.8.1/fromJS()"},"sidebarLinks":[{"label":"fromJS()","url":"/docs/v3.8.1/fromJS()"},{"label":"is()","url":"/docs/v3.8.1/is()"},{"label":"List","url":"/docs/v3.8.1/List"},{"label":"Map","url":"/docs/v3.8.1/Map"},{"label":"OrderedMap","url":"/docs/v3.8.1/OrderedMap"},{"label":"Set","url":"/docs/v3.8.1/Set"},{"label":"OrderedSet","url":"/docs/v3.8.1/OrderedSet"},{"label":"Stack","url":"/docs/v3.8.1/Stack"},{"label":"Range()","url":"/docs/v3.8.1/Range()"},{"label":"Repeat()","url":"/docs/v3.8.1/Repeat()"},{"label":"Record()","url":"/docs/v3.8.1/Record()"},{"label":"Record.Class","url":"/docs/v3.8.1/Record.Class"},{"label":"Seq","url":"/docs/v3.8.1/Seq"},{"label":"Seq.Keyed","url":"/docs/v3.8.1/Seq.Keyed"},{"label":"Seq.Indexed","url":"/docs/v3.8.1/Seq.Indexed"},{"label":"Seq.Set","url":"/docs/v3.8.1/Seq.Set"},{"label":"Iterable","url":"/docs/v3.8.1/Iterable"},{"label":"Iterable.Keyed","url":"/docs/v3.8.1/Iterable.Keyed"},{"label":"Iterable.Indexed","url":"/docs/v3.8.1/Iterable.Indexed"},{"label":"Iterable.Set","url":"/docs/v3.8.1/Iterable.Set"},{"label":"Collection","url":"/docs/v3.8.1/Collection"},{"label":"Collection.Keyed","url":"/docs/v3.8.1/Collection.Keyed"},{"label":"Collection.Indexed","url":"/docs/v3.8.1/Collection.Indexed"},{"label":"Collection.Set","url":"/docs/v3.8.1/Collection.Set"}]}],null]]},["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","docs","children","$5","children","$6","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,["$","div",null,{"children":[["$","$L8",null,{"version":"v3.8.1"}],["$","div",null,{"className":"header","children":["$","div",null,{"className":"miniHeader","children":["$","div",null,{"className":"miniHeaderContents","children":[["$","$L9",null,{}],["$","$La",null,{"versions":["v4.0.0-rc.2","v3.8.1","latest@main"],"currentVersion":"v3.8.1"}]]}]}]}],["$","div",null,{"className":"pageBody","children":["$","div",null,{"className":"contents","children":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","docs","children","$5","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]}]}]]}],null]]},["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children","docs","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,["$","html",null,{"lang":"en","children":["$","body",null,{"children":["$","$L4",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/f4479af2108893f8.css","precedence":"next","crossOrigin":""}]],"$Lb"]]]]
b:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"fromJS — Immutable.js"}],["$","link","3",{"rel":"icon","href":"/favicon.png"}]]
1:null
